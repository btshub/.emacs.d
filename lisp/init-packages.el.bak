(provide 'init-packages)
(require 'cl)
;; Add Packages
(defvar init-el-package-archives-refreshed nil)
(defun init-el-install-package (package-name)
  (unless (package-installed-p package-name)
    (unless init-el-package-archives-refreshed
      (package-refresh-contents)
      (setq init-el-package-archives-refreshed t))
    (package-install package-name)))
(defmacro init-el-require-package (package-name)
  (init-el-install-package package-name)
  (require package-name)
  `(init-el-install-package ',package-name)))

;; cl - Common Lisp Extension

(setq auto-mode-alist
      (append
       '(("\\.go\\'" . go-mode))
       auto-mode-alist))
(init-el-require-package company)
;;(require 'cl)
;; 自动安装插件列表
;;; company
(require 'company)
; 开启全局 Company 补全
(global-company-mode 1)

